upstream discourse {
  server unix:/tmp/unicorn.discourse.sock fail_timeout=0;
}

server {
  listen 9000 ssl;
  server_name discuss.python.org;

  ssl_certificate /etc/ssl/private/discourse.psf.io.pem;
  ssl_certificate_key /etc/ssl/private/discourse.psf.io.pem;

  error_log /var/log/nginx/discourse.error.log;
  access_log /var/log/nginx/discourse.access.log;

  # path to discourse's public directory
  set $public /srv/discourse/app/public/;

  root $public;

  try_files $uri/index.html $uri @app;

  # bypass rails stack with a cheap 204 for favicon.ico requests
  location /favicon.ico {
    return 204;
    access_log off;
    log_not_found off;
  }

  location ~* assets/.*\.(eot|ttf|woff|woff2|ico)$ {
    expires 1y;
    add_header Cache-Control public;
    add_header Access-Control-Allow-Origin *;
  }

  location ~ ^/assets/ {
    expires 1y;
    # asset pipeline enables this
    gzip_static on;
    add_header Cache-Control public;
    # TODO I don't think this break is needed, it just breaks out of rewrite
    break;
  }

  location ~ ^/plugins/ {
    expires 1y;
    add_header Cache-Control public;
  }

  # cache emojis
  location ~ /_?emoji.*\.(png|gif|jpg|jpeg)$/ {
    expires 1y;
    add_header Cache-Control public;
  }

  location ~ ^/uploads/ {
    # NOTE: it is really annoying that we can't just define headers
    # at the top level and inherit.
    #
    # proxy_set_header DOES NOT inherit, by design, we must repeat it,
    # otherwise headers are not set correctly
    proxy_set_header Host $http_host;
    proxy_set_header X-Sendfile-Type X-Accel-Redirect;
    proxy_set_header X-Accel-Mapping $public/=/downloads/;
    expires 1y;
    add_header Cache-Control public;

    # custom CSS
    location ~ /stylesheet-cache/ {
      try_files $uri =404;
    }

    # this allows us to bypass rails
    location ~* \.(gif|png|jpg|jpeg|bmp|tif|tiff)$ {
      try_files $uri =404;
    }

    # thumbnails & optimized images
    location ~ /_?optimized/ {
      try_files $uri =404;
    }

    proxy_pass http://discourse;
    break;
  }

  location ~ ^/admin/backups/ {
    proxy_set_header Host $http_host;
    proxy_set_header X-Sendfile-Type X-Accel-Redirect;
    proxy_set_header X-Accel-Mapping $public/=/downloads/;
    proxy_pass http://discourse;
    break;
  }

  # This big block is needed so we can selectively enable
  # acceleration for backups and avatars
  # see note about repetition above
  location ~ ^/(letter_avatar/|user_avatar|highlight-js|stylesheets|favicon/proxied) {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;

    # if Set-Cookie is in the response nothing gets cached
    # this is double bad cause we are not passing last modified in
    proxy_ignore_headers "Set-Cookie";
    proxy_hide_header "Set-Cookie";

    proxy_pass http://discourse;
    break;
  }

  location /letter_avatar_proxy/ {
    # Don't send any client headers to the avatars service
    proxy_method GET;
    proxy_pass_request_headers off;
    proxy_pass_request_body off;

    # Don't let cookies interrupt caching, and don't pass them to the
    # client
    proxy_ignore_headers "Set-Cookie";
    proxy_hide_header "Set-Cookie";

    proxy_set_header Connection "";

    proxy_pass https://avatars.discourse.org/;
    break;
  }

  # we need buffering off for message bus
  location /message-bus/ {
    proxy_set_header Host $http_host;
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_pass http://discourse;
    break;
  }

  location / {
    # this means every file in public is tried first
    try_files $uri @discourse;
  }

  location /downloads/ {
    internal;
    alias $public/;
  }

  location @discourse {
    proxy_set_header Host $http_host;
    proxy_pass http://discourse;
  }

  error_page 500 502 503 504 /500.html;

  # maximum file upload size (keep up to date when changing the corresponding site setting)
  client_max_body_size 10m;

  keepalive_timeout 10;

  # Prevent Internet Explorer 10 "compatibility mode", which breaks Discourse.
  # If other subdomains under your domain are supposed to use Internet Explorer
  # Compatibility mode, it may be used for this one too, unless you explicitly
  # tell IE not to use it.  Alternatively, some people have reported having
  # compatibility mode "stuck" on for some reason. (This will also prevent
  # compatibility mode in IE 8 and 9, but those browsers aren't supported
  # anyway.
  add_header X-UA-Compatible "IE=edge";

  # without weak etags we get zero benefit from etags on dynamically compressed
  # content further more etags are based on the file in nginx not sha of data
  # use dates, it solves the problem fine even cross server
  etag off;
}
