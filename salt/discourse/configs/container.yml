{% from "consul/jinja.sls" import simple_service %}

templates:
  - "templates/web.template.yml"

expose:
  - "9000:80"
  - "2222:22"

links:
  - link:
      name: data
      alias: data

params:
  version: stable

env:
  LANG: en_US.UTF-8

  ## With 2GB we recommend 3-4 workers, with 1GB only 2
  ## If you have lots of memory, use one or two workers per logical CPU core
  UNICORN_WORKERS: 3

  {% call(addr, port) simple_service("primary.postgresql") %}
  DISCOURSE_DB_SOCKET: ''
  DISCOURSE_DB_USERNAME: discourse
  DISCOURSE_DB_PASSWORD: {{ pillar["postgresql-users"]["discourse"] }}
  DISCOURSE_DB_HOST: {{ addr }}
  DISCOURSE_DB_PORT: {{ port }}
  {% endcall %}

  DISCOURSE_REDIS_HOST: data

  ##
  ## List of comma delimited emails that will be made admin and developer
  ## on initial signup example 'user1@example.com,user2@example.com'
  DISCOURSE_DEVELOPER_EMAILS: '{{ pillar["discourse"]["initial_admins"] }}'

  ##
  ## The domain name this Discourse instance will respond to
  DISCOURSE_HOSTNAME: '{{ pillar["discourse"]["hostname"] }}'
  ##
  ## Uncomment if you want the container to be started with the same
  ## hostname (-h option) as specified above (default "$hostname-$config")
  DOCKER_USE_HOSTNAME: true
  ##
  ## TODO: The mailserver this Discourse instance will use
  DISCOURSE_SMTP_ADDRESS: smtp.example.com         # (mandatory)
  #DISCOURSE_SMTP_PORT: 587                        # (optional)
  #DISCOURSE_SMTP_USER_NAME: user@example.com      # (optional)
  #DISCOURSE_SMTP_PASSWORD: pa$$word               # (optional)
  ##
  ## The CDN address for this Discourse instance (configured to pull)
  #DISCOURSE_CDN_URL: //discourse-cdn.example.com

volumes:
  - volume:
      host: /var/discourse/shared/
      guest: /shared
  - volume:
      host: /var/discourse/log/
      guest: /var/log
