upstream tracker-{{ tracker }} {
  server 127.0.0.1:8000;
}

server {
  listen 80;
  server_name {{ server_name }};

  location /.well-known/acme-challenge/ {
      alias /etc/lego/.well-known/acme-challenge/;
      try_files $uri =404;
  }

  location / {
    return 301 https://$http_host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name {{ server_name }};
  include mime.types;

  # By default use the snakeoil certificate...
  ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
  ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

  # If lego has done it's thing ang pulled a certificate from LetsEncrypt,
  # we'll use that! This will take precedence over the above ssl_certificate
  # and ssl_certificate_key directives.
  include conf.d/lego.conf*;

  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header X-Frame-Options "deny";
  add_header X-Xss-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";
  add_header X-Permitted-Cross-Domain-Policies "none";

  error_log /var/log/nginx/roundup-{{ tracker }}.error.log;
  access_log /var/log/nginx/roundup-{{ tracker }}.access.log;

  root /srv/roundup/trackers/{{ tracker }}/;

  include conf.d/tracker-extras/{{ tracker }}*.conf;

  location /@@file/ {
    rewrite ^/@@file/(.*) /html/$1 break;
    expires 1h;
  }

  location / {
    proxy_pass http://tracker-{{ tracker }}/{{ tracker }}/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
